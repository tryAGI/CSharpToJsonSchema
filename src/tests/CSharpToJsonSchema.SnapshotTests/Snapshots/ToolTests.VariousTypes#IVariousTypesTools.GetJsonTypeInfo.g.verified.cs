//HintName: IVariousTypesTools.GetJsonTypeInfo.g.cs
// <auto-generated/>

#nullable enable annotations
#nullable disable warnings

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0612, CS0618

namespace CSharpToJsonSchema.IntegrationTests
{
    public partial class VariousTypesToolsExtensionsJsonSerializerContext : global::System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver
    {
        /// <inheritdoc/>
        public override global::System.Text.Json.Serialization.Metadata.JsonTypeInfo? GetTypeInfo(global::System.Type type)
        {
            Options.TryGetTypeInfo(type, out global::System.Text.Json.Serialization.Metadata.JsonTypeInfo? typeInfo);
            return typeInfo;
        }

        global::System.Text.Json.Serialization.Metadata.JsonTypeInfo? global::System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver.GetTypeInfo(global::System.Type type, global::System.Text.Json.JsonSerializerOptions options)
        {
            if (type == typeof(bool))
            {
                return Create_Boolean(options);
            }
            if (type == typeof(double))
            {
                return Create_Double(options);
            }
            if (type == typeof(float))
            {
                return Create_Single(options);
            }
            if (type == typeof(global::CSharpToJsonSchema.IntegrationTests.GetCurrentWeather3Args))
            {
                return Create_GetCurrentWeather3Args(options);
            }
            if (type == typeof(global::CSharpToJsonSchema.IntegrationTests.GetValueArgs))
            {
                return Create_GetValueArgs(options);
            }
            if (type == typeof(global::CSharpToJsonSchema.IntegrationTests.GetValueAsyncArgs))
            {
                return Create_GetValueAsyncArgs(options);
            }
            if (type == typeof(global::CSharpToJsonSchema.IntegrationTests.SetValueArgs))
            {
                return Create_SetValueArgs(options);
            }
            if (type == typeof(global::CSharpToJsonSchema.IntegrationTests.SetValueAsyncArgs))
            {
                return Create_SetValueAsyncArgs(options);
            }
            if (type == typeof(global::System.DateOnly))
            {
                return Create_DateOnly(options);
            }
            if (type == typeof(global::System.DateTime))
            {
                return Create_DateTime(options);
            }
            if (type == typeof(int))
            {
                return Create_Int32(options);
            }
            if (type == typeof(long))
            {
                return Create_Int64(options);
            }
            return null;
        }
    }
}
